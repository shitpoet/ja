#!/bin/bash
#echo "ja"

tmpfile=$(mktemp -p /dev/shm XXXXXXXXXXXXX.java)
trap "rm -f '$tmpfile'" exit int term

#cat > $tmpfile

#if lsof -Pi :5404 -sTCP:LISTEN -t >/dev/null ; then
if ss -ntl | grep ":5404" >/dev/null ; then
    #echo "jaman is running"
    # server is up, send code through http request
    cat > $tmpfile
    #curl -X POST -H "Content-Type: text/plain" -d @$tmpfile --connect-timeout 20  http://localhost:5404

    status=$(curl -X GET -H "Content-Type: text/plain" --connect-timeout 20 -s http://localhost:5404)
    if [ "$status" == "ready" ]; then
      #echo 'ready'
      curl -X POST -H "Content-Type: text/plain"  \
        --data-binary @$tmpfile \
        -s --connect-timeout 20 \
        http://localhost:5404
    else
      #echo 'not ready yet'
      java $tmpfile
    fi

else
    #echo "jaman is not running, starting jaman..."
    # jaman is not running, send code through stdin
    cat > $tmpfile
    java $tmpfile

    #exec 0<&-
    #exec 1>&-
    #exec 2>&-

    #if [[ $- == *i* ]]; then
    if [ -t 1 ]; then
      #echo 'interactive mode'
      node jaman.js debug &
    else
      #echo 'non-interactive mode'
      node jaman.js 1>&- 2>&- & # needed for fcgiwrap to not freeze
    fi
    #node jaman.js &
    disown -h
    #curl -X POST -H "Content-Type: text/plain" -s \
      #--data-binary @$tmpfile --connect-timeout 20 \
      #--retry 5 \
      #--retry-delay 1 \
      #--retry-connrefused 10 \
      #http://localhost:5404
    # detach stdio-pipes
    #exec 0<&-
    #exec 1>&-
    #exec 2>&-
fi
#echo GET / HTTP/1.0 | nc 0 5404
#code=`cat`
#code=`cat rat.ja`
#printf "GET / HTTP/1.0\r\nHost: localhost\r\n\r\ntest" | nc localhost 5404
#printf "POST / HTTP/1.0\r\n\r\n" | nc localhost 5404
#curl -X POST -H "Content-Type: application/json" -d @req.json http://localhost:5404
#cscstmp=/home/ors/.cache/cscs-cache
#TEMP=$cscstmp cscs -ac -inmem:1 $tmpfile



